@inject UserManager<UserEntity> userManager;
 @model AccountDetailsViewModel
 @{
    var user = await UserManager.GetUserAsync(User);
 }

<section class="security">
    <div class="container">
        <aside>
           
            <Partial name="~/Views/Shared/Partials/_ProfileInfo.cshtml" />
            <nav>
                <a id="nav-settings" class="btn-nav" asp-action="Details" asp-controller="Account"><i class="fa-regular fa-gear"></i><span>Account Details</span></a>
                <a id="nav-security" class="btn-nav active" asp-action="Security" asp-controller="Account"><i class="fa-regular fa-lock"></i><span>Security</span></a>
                <a id="nav-bookmark" class="btn-nav" asp-action="SavedCourses" asp-controller="Account"><i class="fa-regular fa-bookmark"></i><span>Saved Courses</span></a>
                <a id="nav-signout" class="btn-nav" asp-action="SignOut" asp-controller="Account"><i class="fa-regular fa-arrow-right-from-bracket"></i><span>Sign Out</span></a>
            </nav>
        </aside>

        <div class="security-content">
            <h2>Security</h2>
            <h5>Password</h5>
            <form onsubmit="return validatePasswordFormAsdf(event)" asp-controller="Account" asp-action="NewPassword" method="post" novalidate>
                
                <div id="form-current-password" class="input-group">
                    <label asp-for="@Model.SecurityForm.CurrentPassword"></label>
                    <input class="required-field-pw" id="current-pw" asp-for="@Model.SecurityForm.CurrentPassword" />
                    
                </div>
                <div id="form-new-password" class="input-group">
                    <label asp-for="@Model.SecurityForm.NewPassword"></label>
                    <input class="required-field-pw" id="new-pw" asp-for="@Model.SecurityForm.NewPassword" />
                </div>
                <div id="form-confirm-new-password" class="input-group">
                    <label asp-for="@Model.SecurityForm.ConfirmedPassword"></label>
                    <input class="required-field-pw" id="confirmed-pw" asp-for="@Model.SecurityForm.ConfirmedPassword" />
                </div>
                <div class="forms-btns">
                    <button class="btn-gray">Cancel</button>
                    <button type="submit" class="btn-theme">Change password</button>
                </div>
            </form>
            

            
                
            <form class="delete-account" method="post" asp-action="DeleteUser" asp-route-id="@userManager.GetUserId(User)">
                <h5>Delete account</h5>
                <p class="delete-info">When you delete your account, your public profile will be deactivated immediately. If you change your mind before the 14 days are up, sign in with your email and password, and we’ll send you a link to reactivate your account.</p>
                <label class="checkbox-box">
                    <input id="deleting-user"  asp-for="DeleteUser.deleteConfirmation"  type="checkbox">
                    <span class="min-checkmark"></span>
                    <p class="text-with-validation" >Yes, want to delete my account.</p>
                </label>
                <button class="delete-btn" type="submit" >Delete</button>
            </form>




        </div>
    </div>
</section>

<script src="~/js/update-password.js"></script>
<script src="/js/upload.js"></script>
<script src="/js/delete-validator.js"></script>